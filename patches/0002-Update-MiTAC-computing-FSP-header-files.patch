From b5a64a5eb69910548203e4f157a94f5ea98536b2 Mon Sep 17 00:00:00 2001
From: Mark Chang <mark.chang@mitaccomputing.com>
Date: Wed, 27 Nov 2024 14:52:46 +0800
Subject: [PATCH 2/2] Update MiTAC computing FSP header files

---
 .../fsp/fsp2_0/sapphirerapids_sp/FspUpd.h     |  29 +--
 .../fsp/fsp2_0/sapphirerapids_sp/FspmUpd.h    | 229 ++++++++++--------
 .../fsp/fsp2_0/sapphirerapids_sp/FspsUpd.h    | 107 +++-----
 .../fsp/fsp2_0/sapphirerapids_sp/FsptUpd.h    |  29 +--
 4 files changed, 174 insertions(+), 220 deletions(-)

diff --git a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspUpd.h b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspUpd.h
index ce86ce8a9a..01eaa9cd50 100644
--- a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspUpd.h
+++ b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspUpd.h
@@ -1,30 +1,9 @@
 /** @file
 
-Copyright (c) 2022, Intel Corporation. All rights reserved.<BR>
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-* Neither the name of Intel Corporation nor the names of its contributors may
-  be used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-  THE POSSIBILITY OF SUCH DAMAGE.
+  @copyright
+  Copyright (C) 2023 Intel Corporation
+
+  SPDX-License-Identifier: BSD-2-Clause-Patent
 
   This file is automatically generated. Please do NOT modify !!!
 
diff --git a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspmUpd.h b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspmUpd.h
index bfd8d7dce4..dbcfe00391 100644
--- a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspmUpd.h
+++ b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspmUpd.h
@@ -1,30 +1,9 @@
 /** @file
 
-Copyright (c) 2022, Intel Corporation. All rights reserved.<BR>
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-* Neither the name of Intel Corporation nor the names of its contributors may
-  be used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-  THE POSSIBILITY OF SUCH DAMAGE.
+  @copyright
+  Copyright (C) 2023 - 2024 Intel Corporation
+
+  SPDX-License-Identifier: BSD-2-Clause-Patent
 
   This file is automatically generated. Please do NOT modify !!!
 
@@ -463,65 +442,68 @@ typedef struct {
 **/
   UINT8                       ProcessorLtsxEnable;
 
-/** Offset 0x017D - DDR frequency limit
+/** Offset 0x017D - Processor Homeless Prefetch
+  Enable or Disable Homeless Prefetch on all threads - 0: Disable, 1: Enable, <b>0xFF:
+  Auto(Default)</b>.
+  0:Disable, 1:Enable
+**/
+  UINT8                       HomelessPrefetchEnable;
+
+/** Offset 0x017E - DDR frequency limit
   Select DDR frequency limit, <b>0x00: Auto(Default)</b>, 0x13:DDR_3200, 0x16:DDR_3600,
   0x19:DDR_4000, 0x1C:DDR_4400, 0x1D:DDR_4800, 0x1E:DDR_5200, 0x1F:DDR_5600
 **/
   UINT8                       DdrFreqLimit;
 
-/** Offset 0x017E - Memory Serial Debug Message Level
+/** Offset 0x017F - Memory Serial Debug Message Level
   Select Memory Serial Debug Message Level - 0: Disable, 1: Minimum, 2: Normal, <b>3:
   Maximum(Default)</b>, 4: Auto.
   0:Disable, 1:Minimum, 2:Normal, 3:Maximum, 4:Auto
 **/
   UINT8                       serialDebugMsgLvl;
 
-/** Offset 0x017F - IIO ConfigIOU0
+/** Offset 0x0180 - IIO ConfigIOU0
   ConfigIOU[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU0[8];
 
-/** Offset 0x0187 - IIO ConfigIOU1
+/** Offset 0x0188 - IIO ConfigIOU1
   ConfigIOU[MAX_SOCKET][1]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU1[8];
 
-/** Offset 0x018F - IIO ConfigIOU2
+/** Offset 0x0190 - IIO ConfigIOU2
   ConfigIOU[MAX_SOCKET][2]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU2[8];
 
-/** Offset 0x0197 - IIO ConfigIOU3
+/** Offset 0x0198 - IIO ConfigIOU3
   ConfigIOU[MAX_SOCKET][3]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU3[8];
 
-/** Offset 0x019F - IIO ConfigIOU4
+/** Offset 0x01A0 - IIO ConfigIOU4
   ConfigIOU[MAX_SOCKET][4]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU4[8];
 
-/** Offset 0x01A7 - IIO ConfigIOU5
+/** Offset 0x01A8 - IIO ConfigIOU5
   ConfigIOU[MAX_SOCKET][5]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU5[8];
 
-/** Offset 0x01AF - IIO ConfigIOU6
+/** Offset 0x01B0 - IIO ConfigIOU6
   ConfigIOU[MAX_SOCKET][6]: MAX_SOCKET=8, 0x00:x4x4x4x4, 0x01:x4x4xxx8, 0x02:xxx8x4x4,
   0x03:xxx8xxx8, 0x04:xxxxxx16, <b>0xFF:AUTO(Default)</b>
 **/
   UINT8                       IioConfigIOU6[8];
 
-/** Offset 0x01B7
-**/
-  UINT8                       UnusedUpdSpace4;
-
 /** Offset 0x01B8 - IIO PCIE Config Table Ptr
   Pointer to array of UPD_IIO_PCIE_PORT_CONFIG
 **/
@@ -567,7 +549,7 @@ typedef struct {
 
 /** Offset 0x01D2
 **/
-  UINT8                       UnusedUpdSpace5[2];
+  UINT8                       UnusedUpdSpace4[2];
 
 /** Offset 0x01D4 - IIO PCIe Port Hide Array Ptr
   Pointer to array of Hide or visible for IIO Pcie Port.
@@ -587,7 +569,7 @@ typedef struct {
 
 /** Offset 0x01DD
 **/
-  UINT8                       UnusedUpdSpace6;
+  UINT8                       UnusedUpdSpace5;
 
 /** Offset 0x01DE - DelayAfterPCIeLinkTraining
   Custom delay after PCI-E link training on IIO ports
@@ -623,7 +605,7 @@ typedef struct {
 
 /** Offset 0x01EB
 **/
-  UINT8                       UnusedUpdSpace7;
+  UINT8                       UnusedUpdSpace6;
 
 /** Offset 0x01EC - ISA Serial Base selection
   Select ISA Serial Base address could be initialized by boot loader - 0x2F8: 0x2F8,
@@ -666,18 +648,18 @@ typedef struct {
 
 /** Offset 0x01F3
 **/
-  UINT8                       UnusedUpdSpace8;
+  UINT8                       UnusedUpdSpace7;
 
 /** Offset 0x01F4 - MemTest Loops
   Number of memory test loops during normal boot, set to 0 to run memtest infinitely
   in FSP - <b> 1 (Default)</b>.
-  minimum = 0, maximum = 65535
+  0:indefinite, 1: 1, 65535:maximum = 65535
 **/
   UINT16                      MemTestLoops;
 
 /** Offset 0x01F6
 **/
-  UINT8                       UnusedUpdSpace9[2];
+  UINT8                       UnusedUpdSpace8[2];
 
 /** Offset 0x01F8 - Adv MemTest Options
   This option is a bit mask[19:0]: All 0 = disabled: bit-0=XMATS8, bit-1=XMATS16,
@@ -711,7 +693,7 @@ typedef struct {
 
 /** Offset 0x0207
 **/
-  UINT8                       UnusedUpdSpace10;
+  UINT8                       UnusedUpdSpace9;
 
 /** Offset 0x0208 - Adv MemTest PMIC VDD Level
   Specify PMIC VDD level in units of mV in FSP.
@@ -826,7 +808,7 @@ typedef struct {
 
 /** Offset 0x0219
 **/
-  UINT8                       UnusedUpdSpace11[3];
+  UINT8                       UnusedUpdSpace10[3];
 
 /** Offset 0x021C - Test Signal Bit Mask For RMT
   Test signal bit mask for RMT in FSP.
@@ -893,8 +875,11 @@ typedef struct {
   UINT8                       RMTTxVref;
 
 /** Offset 0x0229 - DDR5 ECS
-  Enable/Disable DDR5 Error Check and Scrub (ECS) in FSP - 0:Disable, <b>1:Enable(Default)</b>.
-  0:Disable, 1:Enable
+  Enable/Disable ECS and ECS Result Collection feature in FSP - 0:Disable ECS and
+  Result Collection, <b>1:Enable ECS without Result Collection(Default)</b>, 2:Enable
+  ECS with Result Collection.
+  0:Disable ECS and Collection Collection, 1:Enable ECS without Result Collection,
+  2:Enable ECS with Result Collection
 **/
   UINT8                       ErrorCheckScrub;
 
@@ -929,7 +914,7 @@ typedef struct {
 
 /** Offset 0x022E
 **/
-  UINT8                       UnusedUpdSpace12[2];
+  UINT8                       UnusedUpdSpace11[2];
 
 /** Offset 0x0230 - pprAddrVariablePtr
   Pointer to array of PPR_ADDR_VARIABLE
@@ -992,111 +977,151 @@ typedef struct {
 **/
   UINT8                       CriticalTxVrefRightEdge;
 
-/** Offset 0x023E - Reboot On Critical Failure
+/** Offset 0x023E - Critical CaTiming Left Edge
+  Offset for CA Timing Left Edge
+**/
+  UINT8                       MemIOHealthCriticalCaTimingLeftEdge;
+
+/** Offset 0x023F - Critical CaTiming Right Edge
+  Offset for CA Timing Right Edge
+**/
+  UINT8                       MemIOHealthCriticalCaTimingRightEdge;
+
+/** Offset 0x0240 - Critical CaVref Left Edge
+  Offset for Ca Vref Left Edge
+**/
+  UINT8                       MemIOHealthCriticalCaVrefLeftEdge;
+
+/** Offset 0x0241 - Critical CaVref Right Edge
+  Offset for Ca Vref Right Edge
+**/
+  UINT8                       MemIOHealthCriticalCaVrefRightEdge;
+
+/** Offset 0x0242 - Reboot On Critical Failure
   Reboot System on Critical failure to do Memory Training in FSP - 0:Disable, <b>1:Enable(Default)</b>.
   0:Disable, 1:Enable
 **/
   UINT8                       ResetOnCriticalError;
 
-/** Offset 0x023F - Number of Times to Reboot and Retrain
+/** Offset 0x0243 - Number of Times to Reboot and Retrain
   Number of times to Reboot System on Critical failure to do Memory Training in FSP.
 **/
   UINT8                       CriticalRetries;
 
-/** Offset 0x0240 - Memory I/O Health Check Loop Count
+/** Offset 0x0244 - Memory I/O Health Check Loop Count
   CPGC Test Loop Count for Memory IO Health Test
 **/
   UINT8                       MemIOHealthLoopCount;
 
-/** Offset 0x0241 - Telemetry RxDqsDelay Left Edge
+/** Offset 0x0245 - Telemetry RxDqsDelay Left Edge
   Offset for Telemetry RxDqsDelay Left Edge in FSP.
 **/
   UINT8                       TelemetryRxDqsDelayLeftEdge;
 
-/** Offset 0x0242 - Telemetry RxDqsDelay Right Edge
+/** Offset 0x0246 - Telemetry RxDqsDelay Right Edge
   Offset for Telemetry RxDqsDelay Right Edge in FSP.
 **/
   UINT8                       TelemetryRxDqsDelayRightEdge;
 
-/** Offset 0x0243 - Telemetry RxVref Left Edge
+/** Offset 0x0247 - Telemetry RxVref Left Edge
   Offset for Telemetry RxDqsDelay Left Edge in FSP.
 **/
   UINT8                       TelemetryRxVrefLeftEdge;
 
-/** Offset 0x0244 - Telemetry RxVref Right Edge
+/** Offset 0x0248 - Telemetry RxVref Right Edge
   Offset for Telemetry RxDqsDelay Right Edge in FSP.
 **/
   UINT8                       TelemetryRxVrefRightEdge;
 
-/** Offset 0x0245 - Telemetry TxDqDelay Left Edge
+/** Offset 0x0249 - Telemetry TxDqDelay Left Edge
   Offset for Telemetry TxDqDelay Left Edge in FSP.
 **/
   UINT8                       TelemetryTxDqDelayLeftEdge;
 
-/** Offset 0x0246 - Telemetry TxDqDelay Right Edge
+/** Offset 0x024A - Telemetry TxDqDelay Right Edge
   Offset for Telemetry TxDqDelay Right Edge in FSP.
 **/
   UINT8                       TelemetryTxDqDelayRightEdge;
 
-/** Offset 0x0247 - Volatile Memory Mode
+/** Offset 0x024B - Telemetry CaTiming Left Edge
+  Offset for CA Timing Left Edge
+**/
+  UINT8                       MemIOHealthTelemetryCaTimingLeftEdge;
+
+/** Offset 0x024C - Telemetry CaTiming Right Edge
+  Offset for CA Timing Right Edge
+**/
+  UINT8                       MemIOHealthTelemetryCaTimingRightEdge;
+
+/** Offset 0x024D - Telemetry CaVref Left Edge
+  Offset for Ca Vref Left Edge
+**/
+  UINT8                       MemIOHealthTelemetryCaVrefLeftEdge;
+
+/** Offset 0x024E - Telemetry CaVref Right Edge
+  Offset for Ca Vref Right Edge
+**/
+  UINT8                       MemIOHealthTelemetryCaVrefRightEdge;
+
+/** Offset 0x024F - Volatile Memory Mode
   Selects 1LM or 2LM mode for volatile memory. For 2LM memory mode, system will try
   to configure 2LM but if system is unable to configure 2LM, volatile memory mode
-  will fall back to 1LM in FSP - <b>0: 1LM(Default)</b>, 1: 2LM, 2: MIX 1LM2LM.
+  will fall back to 1LM in FSP - <b>0: 1LM(Default)</b>, 1: 2LM, 2: MIX 1LM2L.
   0: 1LM, 1: 2LM, 2: MIX 1LM2LM
 **/
   UINT8                       volMemMode;
 
-/** Offset 0x0248 - Dynamic ECC Mode Selection
+/** Offset 0x0250 - Dynamic ECC Mode Selection
   Enable/Disable Dynamic ECC Mode Selection in FSP - 0:Disable, <b>1:Enable(Default)</b>,
   2:Enable + Allow 128b ECC.
   0:Disable, 1:Enable, 2:Enable + Allow 128b ECC
 **/
   UINT8                       DynamicEccModeSel;
 
-/** Offset 0x0249 - Memory Patrol Scrub
+/** Offset 0x0251 - Memory Patrol Scrub
   Memory Patrol Scrub - 0:Disable, 1:Enable during FspMemoryInit(), <b>2:Enable during
   NotifyPhase(EnumInitPhaseReadyToBoot) (Default)</b>.
   0:Disable, 1:Enable during FspMemoryInit(), 2:Enable during EnumInitPhaseReadyToBoot
 **/
   UINT8                       PatrolScrub;
 
-/** Offset 0x024A - Memory Patrol Scrub
+/** Offset 0x0252 - Memory Patrol Scrub
   Memory Patrol Scrub - <b>0:Disable  (Default)</b>, 1:Enable at ReadyToBootFsp().
   0:Disable, 1:Enable Enable at ReadyToBootFsp()
 **/
   UINT8                       PatrolScrubNotify;
 
-/** Offset 0x024B - Patrol Scrub Interval
+/** Offset 0x0253 - Patrol Scrub Interval
   Patrol Scrub Interval in FSP.
 **/
   UINT8                       PatrolScrubDuration;
 
-/** Offset 0x024C - Patrol Scrub Address Mode
+/** Offset 0x0254 - Patrol Scrub Address Mode
   Selects the address mode between <b>1: System Physical Address (Default)</b>, 0:Reverse
   Address in FSP.
   0:Reverse Address, 1:System Physical Address
 **/
   UINT8                       PatrolScrubAddrMode;
 
-/** Offset 0x024D - Memory Thermal Throttling Mode
+/** Offset 0x0255 - Memory Thermal Throttling Mode
   Memory Configure Memory Thermal Throttling Mode in FSP - 0:Disable, <b>2:CLTT_ENABLE(Default)</b>,
   3:CLTT_PECI_ENABLE.
   0:Disable, 2:CLTT_ENABLE, 3:CLTT_PECI_ENABLE
 **/
   UINT8                       thermalthrottlingsupport;
 
-/** Offset 0x024E - Memory Correctable Error Threshold
+/** Offset 0x0256 - Memory Correctable Error Threshold
   Memory Correctable Error Threshold (1 - 32767) used for sparing and leaky bucket in FSP.
 **/
   UINT16                      spareErrTh;
 
-/** Offset 0x0250 - WR CRC feature Control
+/** Offset 0x0258 - WR CRC feature Control
   Enable/Disable Write CRC in FSP - <b>0:Disable(Default)</b>, 1:Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       WrCRC;
 
-/** Offset 0x0251 - Adaptive Refresh Management Level
+/** Offset 0x0259 - Adaptive Refresh Management Level
   Selects Adaptive Refresh Management(ARFM) Level when refresh management(RFM) is
   required. <b>0:Default - RAAIMT, RAAMMT, RAADEC(Default)</b>; 1:Level A - RAAIMT-A,
   RAAMMT-A, RAADEC-A; 2:Level B - RAAIMT-B, RAAMMT-B, RAADEC-B; 3:Level C - RAAIMT-C,
@@ -1106,80 +1131,80 @@ typedef struct {
 **/
   UINT8                       AdaptiveRefreshMgmtLevel;
 
-/** Offset 0x0252 - MEMHOT INPUT Control
+/** Offset 0x025A - MEMHOT INPUT Control
   Enable/Disable MEMHOT INPUT in FSP - <b>0:Disable(Default)</b>, 1:Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       MemHotIn;
 
-/** Offset 0x0253 - MEMHOT OUTPUT Mode
+/** Offset 0x025B - MEMHOT OUTPUT Mode
   MEMHOT OUTPUT Mode in FSP - 0:Disable, <b>1:Enable only temphi(Default)</b>, 2:Enable
   temphi & mid, 3:Enable temphi & mid & low.
   0:Disable, 1:Enable only temphi, 2:Enable temphi & mid, 3:Enable temphi & mid & low
 **/
   UINT8                       MemhotOutputOnlyOpt;
 
-/** Offset 0x0254 - CxlType3LegacyEn
+/** Offset 0x025C - CxlType3LegacyEn
   Enable or disable CXL type 3 device using CXL type 2 flow - <b>0:Disable(Default)</b>, 1:Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       DfxCxlType3LegacyEn;
 
-/** Offset 0x0255 - DfxPmicSecureMode
+/** Offset 0x025D - DfxPmicSecureMode
   0:Disable Pmic Secure Mode, 1:Enable Pmic Secure Mode, <b>2:Auto Pmic Secure Mode(Default)</b>.
   0:Disable Pmic Secure Mode, 1:Enable Pmic Secure Mode, 2:Auto Pmic Secure Mode
 **/
   UINT8                       DfxPmicSecureMode;
 
-/** Offset 0x0256 - IIO PcieSubSystemMode0
+/** Offset 0x025E - IIO PcieSubSystemMode0
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode0[8];
 
-/** Offset 0x025E - IIO PcieSubSystemMode1
+/** Offset 0x0266 - IIO PcieSubSystemMode1
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode1[8];
 
-/** Offset 0x0266 - IIO PcieSubSystemMode2
+/** Offset 0x026E - IIO PcieSubSystemMode2
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode2[8];
 
-/** Offset 0x026E - IIO PcieSubSystemMode3
+/** Offset 0x0276 - IIO PcieSubSystemMode3
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode3[8];
 
-/** Offset 0x0276 - IIO PcieSubSystemMode4
+/** Offset 0x027E - IIO PcieSubSystemMode4
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode4[8];
 
-/** Offset 0x027E - IIO PcieSubSystemMode5
+/** Offset 0x0286 - IIO PcieSubSystemMode5
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode5[8];
 
-/** Offset 0x0286 - IIO PcieSubSystemMode6
+/** Offset 0x028E - IIO PcieSubSystemMode6
   PcieSubSystemMode[MAX_SOCKET][0]: MAX_SOCKET=8, 0x00:IIO_MODE_GEN4_ONLY, 0x01:IIO_MODE_GEN5,
   0x02:IIO_MODE_CXL, 0x03:IIO_MODE_FORCE_CXL, <b>0x01:IIO_MODE_GEN5(Default)</b>
 **/
   UINT8                       IioPcieSubSystemMode6[8];
 
-/** Offset 0x028E - CXL Header Bypass
+/** Offset 0x0296 - CXL Header Bypass
   Enable/Disable the CXL header bypass in FSP - <b>0:Disabled(Default)</b>, 1:Enabled.
   0:Disable, 1:Enable
 **/
   UINT8                       DfxCxlHeaderBypass;
 
-/** Offset 0x028F - CXL Security Level
+/** Offset 0x0297 - CXL Security Level
   CXL Security Level<br>\n
   0: Fully Trusted - CXL Device can get access on CXL.$ for host-attached and device
   attached memory ranges in the WB address space.<br>\n
@@ -1191,42 +1216,42 @@ typedef struct {
 **/
   UINT8                       DfxCxlSecLvl;
 
-/** Offset 0x0290
+/** Offset 0x0298
 **/
   UINT32                      DfxCxlDebugModePtr;
 
-/** Offset 0x0294
+/** Offset 0x029C
 **/
   UINT32                      DfxCxlDebugModeNumber;
 
-/** Offset 0x0298 - Lock Chipset
+/** Offset 0x02A0 - Lock Chipset
   Lock or Unlock chipset in FSP - <b>0:Disabled(Default)</b>, 1:Enabled.
   0:Disable, 1:Enable
 **/
   UINT8                       LockChipset;
 
-/** Offset 0x0299 - MSR Lock Control
+/** Offset 0x02A1 - MSR Lock Control
   Enable - MSR 3Ah and CSR 80h will be locked in FSP. Power Good reset is needed to
   remove lock bits - <b>0:Disabled(Default)</b>, 1:Enabled.
   0:Disable, 1:Enable
 **/
   UINT8                       ProcessorMsrLockControl;
 
-/** Offset 0x029A - DFX Enable
+/** Offset 0x02A2 - DFX Enable
   When Enabled, Expose IIO DFX devices and other CPU devices like PMON in FSP - <b>0:Disabled(Default)</b>,
   1:Enabled.
   0:Disable, 1:Enable
 **/
   UINT8                       DFXEnable;
 
-/** Offset 0x029B - DFX Disable Bios Done
+/** Offset 0x02A3 - DFX Disable Bios Done
   When Enabled, suppresses notifying processor via MSR 151h that boot initialization
   is finished in FSP - <b>0:Disabled(Default)</b>, 1:Enabled.
   0:Disable, 1:Enable
 **/
   UINT8                       DfxDisableBiosDone;
 
-/** Offset 0x029C - Processor Package C State
+/** Offset 0x02A4 - Processor Package C State
   Package C State - 0: C0/C1 state, 1: C2 state, 2: C6(non Retention) state, 3: C6(Retention)
   state, 7: No Limit, <b>0xFF: Auto (Default)</b>
   0: C0/C1 state, 1: C2 state, 2: C6(non Retention) state, 3: C6(Retention) state,
@@ -1234,46 +1259,48 @@ typedef struct {
 **/
   UINT8                       CpuPmPackageCState;
 
-/** Offset 0x029D - Enhanced Intel SpeedStep(R) Tech
+/** Offset 0x02A5 - Enhanced Intel SpeedStep(R) Tech
   Enhanced Intel SpeedStep(R) Tech - <b>1: Enable(Default)</b>, 0: Disable.
   0:Disabled, 1:Enabled
 **/
   UINT8                       CpuPmEistEnable;
 
-/** Offset 0x029E - C1E
+/** Offset 0x02A6 - C1E
   C1E - <b>1: Enable(Default)</b>, 0: Disable.
+  0:Disabled, 1:Enabled
 **/
   UINT8                       CpuPmC1eEnable;
 
-/** Offset 0x029F - Intel SST-PP
+/** Offset 0x02A7 - Intel SST-PP
   Intel SST-PP Select allows user to choose level - <b>0xFF: Choose lowest level hardware
   supported(Default)</b>, 0: Level 0, 3: Level 3, 4: Level 4.
+  0xFF: AUTO (default), 0: Level 0, 3: Level 3, 4: Level 4
 **/
   UINT8                       CpuPmIssTdpLevel;
 
-/** Offset 0x02A0 - Activate SST-BF
+/** Offset 0x02A8 - Activate SST-BF
   SST-BF - <b>0: Disable (Default)</b>, 1: Enabled.
   0:Disabled, 1:Enabled
 **/
   UINT8                       CpuPmProcessorActivePbf;
 
-/** Offset 0x02A1
+/** Offset 0x02A9
 **/
-  UINT8                       UnusedUpdSpace13[7];
+  UINT8                       UnusedUpdSpace12[7];
 
-/** Offset 0x02A8 - Socket 0 Core Disable Bitmask
+/** Offset 0x02B0 - Socket 0 Core Disable Bitmask
   Set bit(s) to Disable or clear bit(s) to Enable core(s) on Socket 0. NOTE: Any core
   disabled by user will force static SST-PP.
 **/
   UINT64                      CpuPmCoreDisableBitmask0;
 
-/** Offset 0x02B0 - Socket 1 Core Disable Bitmask
+/** Offset 0x02B8 - Socket 1 Core Disable Bitmask
   Set bit(s) to Disable or clear bit(s) to Enable core(s) on Socket 1. NOTE: Any core
   disabled by user will force static SST-PP.
 **/
   UINT64                      CpuPmCoreDisableBitmask1;
 
-/** Offset 0x02B8
+/** Offset 0x02C0
 **/
   UINT8                       ReservedMemoryInitUpd[16];
 } FSPM_CONFIG;
@@ -1294,11 +1321,11 @@ typedef struct {
 **/
   FSPM_CONFIG                 FspmConfig;
 
-/** Offset 0x02C8
+/** Offset 0x02D0
 **/
-  UINT8                       UnusedUpdSpace14[6];
+  UINT8                       UnusedUpdSpace13[6];
 
-/** Offset 0x02CE
+/** Offset 0x02D6
 **/
   UINT16                      UpdTerminator;
 } FSPM_UPD;
diff --git a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspsUpd.h b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspsUpd.h
index 79e09295af..40fae7ab75 100644
--- a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspsUpd.h
+++ b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FspsUpd.h
@@ -1,30 +1,9 @@
 /** @file
 
-Copyright (c) 2022, Intel Corporation. All rights reserved.<BR>
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-* Neither the name of Intel Corporation nor the names of its contributors may
-  be used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-  THE POSSIBILITY OF SUCH DAMAGE.
+  @copyright
+  Copyright (C) 2023 Intel Corporation
+
+  SPDX-License-Identifier: BSD-2-Clause-Patent
 
   This file is automatically generated. Please do NOT modify !!!
 
@@ -42,140 +21,130 @@ are permitted provided that the following conditions are met:
 **/
 typedef struct {
 
-/** Offset 0x0020 - Processor VmxEnable Function
-  Processor VmxEnable Function - <b>1: Enable(Default)</b>, 0: Disable Processor VmxEnable Function.
-  0: Disable, 1: Enable
-**/
-  UINT8                       VmxEnable;
-
-/** Offset 0x0021 - Processor TurboMode Function
+/** Offset 0x0020 - Processor TurboMode Function
   Processor TurboMode Function - <b>1: Enable(Default)</b>, 0: Disable Processor TurboMode Function.
   0: Disable, 1: Enable
 **/
   UINT8                       TurboMode;
 
-/** Offset 0x0022 - Processor Safer Mode Extensions Function
+/** Offset 0x0021 - Processor Safer Mode Extensions Function
   Processor Safer Mode Extensions Function - <b>0: Disable(Default)</b>, 1: Enable
   Processor Safer Mode Extensions Function.
   0: Disable, 1: Enable
 **/
   UINT8                       ProcessorSmxEnable;
 
-/** Offset 0x0023 - SstCp
+/** Offset 0x0022 - SstCp
   SstCp - 1: Enable, <b>0: Disable SstCp(Default)</b>.
   0: Disable, 1: Enable
 **/
   UINT8                       SstCpSetting;
 
-/** Offset 0x0024 - SstCp Capable Status
+/** Offset 0x0023 - SstCp Capable Status
   SST-CP Capable Status in system - <b>0: Disable(Default)</b>, 1: Enable.
   0: Disable, 1: Enable
 **/
   UINT8                       SstCpCapableSystem;
 
-/** Offset 0x0025
-**/
-  UINT8                       UnusedUpdSpace0[1];
-
-/** Offset 0x0026 - PCH Protect Range Limit
+/** Offset 0x0024 - PCH Protect Range Limit
   Left shifted address by 12 bits with address bits 11:0 are assumed to be FFFh for
   limit comparison.
 **/
   UINT16                      PchProtectedRangeLimit[5];
 
-/** Offset 0x0030 - PCH Protect Range Base
+/** Offset 0x002E - PCH Protect Range Base
   Left shifted address by 12 bits with address bits 11:0 are assumed to be 0.
 **/
   UINT16                      PchProtectedRangeBase[5];
 
-/** Offset 0x003A - PchAdrEn
+/** Offset 0x0038 - PchAdrEn
   PchAdr - <b>0: PLATFORM POR(Default)</b>, 1: FORCE ENABLE, 2:FORCE DISABLE.
   0: PLATFORM POR, 1: FORCE ENABLE, 2: FORCE DISABLE
 **/
   UINT8                       PchAdrEn;
 
-/** Offset 0x003B - EnableTme
+/** Offset 0x0039 - EnableTme
   EnableTme - <b>0: Disabled(Default)</b>, 1: Enabled, 2:Software Controlled.
   0: Disabled, 1: Enabled, 2:Software Controlled
 **/
   UINT8                       EnableTme;
 
-/** Offset 0x003C - EnableTmeBypass
+/** Offset 0x003A - EnableTmeBypass
   EnableTmeBypass - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       EnableTmeBypass;
 
-/** Offset 0x003D - SgxFactoryReset
+/** Offset 0x003B - SgxFactoryReset
   SgxFactoryReset - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxFactoryReset;
 
-/** Offset 0x003E - EnableSgx
+/** Offset 0x003C - EnableSgx
   EnableSgx - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       EnableSgx;
 
-/** Offset 0x003F - SgxPackageInfoInBandAccess
+/** Offset 0x003D - SgxPackageInfoInBandAccess
   SgxPackageInfoInBandAccess - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxPackageInfoInBandAccess;
 
-/** Offset 0x0040 - SgxQoS
+/** Offset 0x003E - SgxQoS
   SgxQoS - 0: Disabled, <b>1: Enabled(Default)</b>.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxQoS;
 
-/** Offset 0x0041 - EpochUpdate
+/** Offset 0x003F - EpochUpdate
   EpochUpdate - 1: Change to New Random Owner EPOCHs, <b>2: Manual User Defined Owner
   EPOCHs(Default)</b>.
   1: Change to New Random Owner EPOCHs, 2: Manual User Defined Owner EPOCHs
 **/
   UINT8                       EpochUpdate;
 
-/** Offset 0x0042 - SgxLeWr
+/** Offset 0x0040 - SgxLeWr
   SgxLeWr - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxLeWr;
 
-/** Offset 0x0043 - SgxDebugMode
+/** Offset 0x0041 - SgxDebugMode
   SgxDebugMode - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxDebugMode;
 
-/** Offset 0x0044 - SgxAutoRegistrationAgent
+/** Offset 0x0042 - SgxAutoRegistrationAgent
   SgxAutoRegistrationAgent - <b>0: Disabled(Default)</b>, 1: Enabled.
   0: Disabled, 1: Enabled
 **/
   UINT8                       SgxAutoRegistrationAgent;
 
-/** Offset 0x0045 - DfxSgxRegistrationServerSelect
+/** Offset 0x0043 - DfxSgxRegistrationServerSelect
   DfxSgxRegistrationServerSelect - <b>0: SBX(Default)</b>, 1: PRX, 2:AUTO, 3:LIV,
   4:SW Defined Server.
   0: SBX, 1: PRX, 2:AUTO, 3:LIV, 4:SW Defined Server
 **/
   UINT8                       DfxSgxRegistrationServerSelect;
 
-/** Offset 0x0046 - Processor Enable Monitor MWAIT
+/** Offset 0x0044 - Processor Enable Monitor MWAIT
   Processor Enable Monitor MWAIT - <b>1: Enable(Default)</b>, 0: Disable Processor
   Monitor MWAIT.
   0: Disabled, 1: Enabled
 **/
   UINT8                       CpuPmMonitorMWait;
 
-/** Offset 0x0047 - Processor C6
+/** Offset 0x0045 - Processor C6
   Processor C6 - <b>1: Enable(Default)</b>, 0: Disable Processor C6 (ACPI C3) report to OS.
   0: Disabled, 1: Enabled
 **/
   UINT8                       CpuPmC6Enable;
 
-/** Offset 0x0048 - Hardware P-States
+/** Offset 0x0046 - Hardware P-States
   Hardware P-States - 0:  Disable: Hardware chooses a P-state based on OS Request
   (Legacy P-States), <b>1:Native Mode:Hardware chooses a P-state based on OS guidance(Default)</b>,
   2:Out of Band Mode:Hardware autonomously chooses a P-state (no OS guidance), 3:Native
@@ -184,76 +153,76 @@ typedef struct {
 **/
   UINT8                       CpuPmProcessorHWPMEnable;
 
-/** Offset 0x0049 - Power Performance Tuning
+/** Offset 0x0047 - Power Performance Tuning
   Power Performance Tuning - <b>0: OS Controls EPB (Default)</b>, 1: BIOS Controls
   EPB, 2: PECI Controls EPB.
   0: OS Controls EPB, 1: BIOS Controls EPB, 2: PECI Controls EPB
 **/
   UINT8                       CpuPmPwrPerfTuning;
 
-/** Offset 0x004A - Configure SST-BF
+/** Offset 0x0048 - Configure SST-BF
   Allow (Default)/Disallow BIOS to configure SST-BF High Priority Cores so that SW
   does not have to configure - 0:Disable, <b>1:Enable(Default)</b>.
   0:Disable, 1:Enable
 **/
   UINT8                       CpuPmProcessorConfigurePbf;
 
-/** Offset 0x004B - CF9 Global Reset Promotion
+/** Offset 0x0049 - CF9 Global Reset Promotion
   CF9 Global Reset Promotion - 1: Enable promoting CF9 reset to global, <b>0: Disable
   promoting CF9 reset to global(Default)</b>.
   0: Disabled, 1: Enabled
 **/
   UINT8                       MeGrPromotionEnabled;
 
-/** Offset 0x004C - Global Reset Lock
+/** Offset 0x004A - Global Reset Lock
   Global Reset Lock - <b>1: Enable locking the joint ME and host reset capability(Default)</b>,
   0: Disable locking the joint ME and host reset capability.
   0: Disabled, 1: Enabled
 **/
   UINT8                       MeGrLockEnabled;
 
-/** Offset 0x004D - Delayed Authentication Mode
+/** Offset 0x004B - Delayed Authentication Mode
   Enable or disable Delayed Authentication Mode - <b>0: Disable(Default)</b>, 1: Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       DelayedAuthenticationMode;
 
-/** Offset 0x004E - Delayed Authentication Mode Override
+/** Offset 0x004C - Delayed Authentication Mode Override
   Enable or disable Delayed Authentication Mode Override - <b>0: Disable(Default)</b>,
   1: Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       DelayedAuthenticationModeOverride;
 
-/** Offset 0x004F - Core Bios Done Message
+/** Offset 0x004D - Core Bios Done Message
   Enable or disable Core Bios Done message sent to ME - 0: Disable, <b>1: Enable(Default)</b>.
   0:Disable, 1:Enable
 **/
   UINT8                       CoreBiosDoneEnabled;
 
-/** Offset 0x0050 - End Of Post Message
+/** Offset 0x004E - End Of Post Message
   Enable or disable sending END_OF_POST message to ME - 0: Disable, 1: Send in PEI,
   <b>2: Send in DXE(Default)</b>.
   0:Disable, 1:Send in PEI, 2:Send in DXE
 **/
   UINT8                       EndOfPostMessage;
 
-/** Offset 0x0051 - HMRFPO_LOCK Message
+/** Offset 0x004F - HMRFPO_LOCK Message
   Enable or disable sending HMRFPO_LOCK message to ME - 0: Disable, <b>1: Enable(Default)</b>.
   0:Disable, 1:Enable
 **/
   UINT8                       MeHmrfpoLockEnabled;
 
-/** Offset 0x0052 - HMRFPO_ENABLE Message
+/** Offset 0x0050 - HMRFPO_ENABLE Message
   Enable or disable sending HMRFPO_ENABLE message to ME - <b>0: Disable(Default)</b>,
   1: Enable.
   0:Disable, 1:Enable
 **/
   UINT8                       MeHmrfpoEnableEnabled;
 
-/** Offset 0x0053
+/** Offset 0x0051
 **/
-  UINT8                       UnusedUpdSpace1[1];
+  UINT8                       UnusedUpdSpace0[3];
 
 /** Offset 0x0054
 **/
@@ -274,7 +243,7 @@ typedef struct {
 
 /** Offset 0x0064
 **/
-  UINT8                       UnusedUpdSpace2[2];
+  UINT8                       UnusedUpdSpace1[2];
 
 /** Offset 0x0066
 **/
diff --git a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FsptUpd.h b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FsptUpd.h
index b8874112f8..7164836a58 100644
--- a/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FsptUpd.h
+++ b/src/vendorcode/intel/fsp/fsp2_0/sapphirerapids_sp/FsptUpd.h
@@ -1,30 +1,9 @@
 /** @file
 
-Copyright (c) 2022, Intel Corporation. All rights reserved.<BR>
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-* Neither the name of Intel Corporation nor the names of its contributors may
-  be used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-  THE POSSIBILITY OF SUCH DAMAGE.
+  @copyright
+  Copyright (C) 2023 Intel Corporation
+
+  SPDX-License-Identifier: BSD-2-Clause-Patent
 
   This file is automatically generated. Please do NOT modify !!!
 
-- 
2.47.1

